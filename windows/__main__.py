from pyrogram.errors import (
    SessionPasswordNeeded, FloodWait,
    PhoneNumberInvalid, ApiIdInvalid,
)
from pyrogram import Client as PyrogramClient
from time import sleep
from windows import *
from . import console
import sys
userbot=None
mainuserbot=None

dosya=""
api_id=""
api_hash=""

calinacakgrup=""

Clients= []
def hesaplariolustur ():
    dizin = soru("HesaplarÄ±n olduÄŸu dosyanÄ±n dizini:")
    with open(dizin,"r") as file:
        dosya = file.read()
        dosya = dosya.split("\n")
    for i in file:
        ii = i.split("|")
        
        stringsession=""
        try:
            api_id = ii[0]
            api_hash= ii[1]
            stringsession = ii[2]
        except IndexError:
            hata("HesaplarÄ±n olduÄŸu dosya biÃ§imi hatalÄ± ! LÃ¼tfen hesaplarÄ± tek satÄ±rda bir hesap olmak Ã¼zere ÅŸu formatta kaydedin:\nFormat: api_id|api_hash|string\nÃ–rnek:1636343|6sasn776askdghd3728|1JKgxqaÄ±uq74294762hjcgajdgddeqhdqkhqdkdkkw=")
        try:
            mainmi= bool(ii[3])
        except IndexError:
            mainmi = None
        except Exception:
            mainmi = None
        
        if mainmi == True & mainuserbot==None:
            try:
                mainuserbot = PyrogramClient(
                stringsession,
                api_id,
                api_hash,
                device_model='Mac',
                system_version=' | Powered by @cerceyn',
                app_version=str('| 1.0'),
                in_memory=False)
                bilgi(api_hash + " iÃ§in main client oluÅŸturuldu !")
            except FloodWait as e:
                hata(api_hash + f" iÃ§in main client oluÅŸturulamadÄ± ! ğŸ›‘ Floodwait: {e.x}")
            except ApiIdInvalid:
                hata(api_hash + f" iÃ§in main client oluÅŸturulamadÄ± ! ğŸ›‘ Api Id veya Hash HatalÄ±!")


        try:
            userbot = PyrogramClient(
            stringsession,
            api_id,
            api_hash,
            device_model='Mac',
            system_version=' | Powered by @cerceyn',
            app_version=str('| 1.0'),
            in_memory=False)
            Clients.append(userbot)
            bilgi(api_hash + " iÃ§in client oluÅŸturuldu !")
        except FloodWait as e:
            noadded(api_hash + f" iÃ§in client oluÅŸturulamadÄ± ! ğŸ›‘ Floodwait: {e.x}")
        except ApiIdInvalid:
            noadded(api_hash + f" iÃ§in client oluÅŸturulamadÄ± ! ğŸ›‘ Api Id veya Hash HatalÄ±!")

hesapno=0
def hesaplarabaglan():
    global hesapno    
    for userbotstart in Clients:
        api_hash = dosya[hesapno].split("|")[1]
        try:
            userbotstart.connect()
            bilgi(api_hash + "oturuma giriÅŸ yapÄ±ldÄ± !")
        except ConnectionError:
            userbotstart.disconnect()
            userbotstart.connect()
            bilgi(api_hash + "oturuma giriÅŸ yapÄ±ldÄ± !")
        except Exception as e:
            noadded(api_hash + f"oturuma giriÅŸ yapÄ±lamadÄ± ! ğŸ›‘ {str(e)}")
    
    hesapno+=1
    #    return userbot

def islemler(userbot):
#    if not calinacakgrup.startswith("@") and not calinacakgrup.startswith("http") and not calinacakgrup.startswith("t.me"):
#        calinacakgrup = "@" + calinacakgrup
    
    hedefgrup = soru("Ã‡alÄ±nan Ãœyeleri Hangi Gruba Ã‡ekeyim: (Grubun kullanÄ±cÄ± adÄ±) ")
#    if not hedefgrup.startswith("@") and not hedefgrup.startswith("http") and not hedefgrup.startswith("t.me"):
#        hedefgrup = "@" + hedefgrup
    count2=None
    try:
        count2 = mainuserbot.get_chat_members_count(hedefgrup)
        bilgi(f"Ã‡alacaÄŸÄ±m grubun ({calinacakgrup}) Ã¼ye sayÄ±sÄ± {count} kiÅŸi ! ")
    except Exception as e:
        hata(e)
    sleep(5)
    for i in range(25):
        console.print("\n")
    logo()
    calinamayan=0
    calinan=0
    try:
        bilgi("Hesap korumasÄ± nedeniyle her 8 saniyede bir Ã¼ye Ã§ekme isteÄŸinde bulunacak..")
        for member in mainuserbot.iter_chat_members(calinacakgrup):
            try:
                if member.user.is_bot:
                    passed("{} bot olduÄŸu iÃ§in geÃ§iliyor!".format(member.user.username))
                    continue
                mainuserbot.add_chat_members(hedefgrup, member.user.id)
                basarili("{} gruba baÅŸarÄ±yla eklendi!".format(member.user.first_name))
                calinan= calinan + 1
            except Exception as e:
                noadded("{} gruba eklenemedi! Hata:{}".format(member.user.first_name,str(e)))
                calinamayan = calinamayan + 1
            sleep(8)
        console.clear()
        logo()
        basarili(f"Ä°ÅŸlem TamamlandÄ± ! {hedefgrup} Ã¶gesine {calinacakgrup} Ã¶gesinden toplam {calinan} Ã¼ye eklendi! ")
        userbot.stop()
        hata("GÃ¼le GÃ¼le !")
    except Exception as e:
        hata(e)

if __name__ == "__main__":
    for i in range(25):
        console.print("\n")
    logo()

    hesaplariolustur()
    global calinacakgrup
    hesaplarabaglan()
    onemli("Ãœye Ã§alacaÄŸÄ±m grupta bulunmam ve Ã§aldÄ±ÄŸÄ±m Ã¼yeleri eklediÄŸim grupta yÃ¶netici olmam gerekir..")
    calinacakgrup = soru("Ãœye Ã‡alÄ±nacak Grubun kullanÄ±cÄ± adÄ±: (Hangi gruptan Ã¼yeleri Ã§ekeyim) ")
    try:
        count = mainuserbot.get_chat_members_count(calinacakgrup)
        bilgi(f"{calinacakgrup} Ã¶gesinde {count} kiÅŸi bulundu! ")
    except Exception as e:
        hata(e)
    a = True
    while a:
        try:
            islemler(userbot)
        except Exception as e:
            onemli(e)
        finally:
            cevap= soru("Kod tekrar yÃ¼rÃ¼tÃ¼lsÃ¼n mÃ¼? (y/n)")
            if cevap == "n":
                a = False
                userbot.stop()
                hata("GÃ¼le GÃ¼le !")
            else:
                continue
        

    






